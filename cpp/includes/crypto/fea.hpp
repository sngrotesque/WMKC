/*
ÊÇ®Â•ΩÔºåËøôÊòØBing„ÄÇÊàëÂèØ‰ª•Â∏ÆÊÇ®‰∫ÜËß£‰∫åËøõÂà∂Êï∞ÊçÆÁöÑÂæ™ÁéØ‰ΩçÁßªÊìç‰Ωú„ÄÇüòä

‰∫åËøõÂà∂Êï∞ÊçÆÁöÑÂæ™ÁéØ‰ΩçÁßªÊìç‰ΩúÊòØÊåáÂ∞Ü‰∫åËøõÂà∂Êï∞ÂêëÂ∑¶ÊàñÂêëÂè≥Âæ™ÁéØÂú∞ÁßªÂä®ÊåáÂÆöÊï∞ÈáèÁöÑ‰ΩçÔºåÂπ∂Â∞ÜË¢´ÁßªÂá∫ÁöÑ‰ΩçÈáçÊñ∞ÊèíÂÖ•Âà∞Âè¶‰∏ÄÁ´Ø¬π„ÄÇ
‰æãÂ¶ÇÔºåÂ∞Ü‰∫åËøõÂà∂Êï∞1101ÔºàÂçÅËøõÂà∂13ÔºâÂ∑¶Áßª‰∏§Ê¨°ÂêéÂæóÂà∞0110ÔºàÂçÅËøõÂà∂6ÔºâÔºåÂÜçÂ∑¶Áßª‰∏ÄÊ¨°ÂæóÂà∞1001ÔºàÂçÅËøõÂà∂9ÔºâÔºåÂÜçÂ∑¶Áßª‰∏ÄÊ¨°ÂæóÂà∞0011ÔºàÂçÅËøõÂà∂3Ôºâ„ÄÇ

Âæ™ÁéØ‰ΩçÁßªÊìç‰ΩúÂèØ‰ª•Áî®‰ª•‰∏ãÂÖ¨ÂºèË°®Á§∫Ôºö

- Âæ™ÁéØÂ∑¶Áßªn‰ΩçÔºö`(val >> (N - n) | (val << n))`
- Âæ™ÁéØÂè≥Áßªn‰ΩçÔºö`(val << (N - n) | (val >> n))`

ÂÖ∂‰∏≠Ôºå`val`ÊòØË¶ÅÁßª‰ΩçÁöÑÊï∞Ôºå`N`ÊòØ`val`ÁöÑ‰ΩçÊï∞Ôºå`n`ÊòØË¶ÅÁßªÂä®ÁöÑ‰ΩçÊï∞Ôºå`|`ÊòØÊåâ‰ΩçÊàñËøêÁÆóÔºå`>>`ÊòØÂè≥ÁßªËøêÁÆóÔºå`<<`ÊòØÂ∑¶ÁßªËøêÁÆó„ÄÇ

ÂÖ∑‰ΩìÊù•ËØ¥ÔºåÊÇ®ÁªôÂá∫ÁöÑ‰æãÂ≠êÂèØ‰ª•Áî®‰ª•‰∏ãÊ≠•È™§ÂÆûÁé∞Ôºö

- `00001010`Â∑¶Áßª‰∏â‰ΩçÂêéÂæóÂà∞`01010000`Ôºö
    * Â∞Ü`00001010`Âè≥Áßª`8 - 3 = 5`‰ΩçÔºåÂæóÂà∞`00000000`
    * Â∞Ü`00001010`Â∑¶Áßª`3`‰ΩçÔºåÂæóÂà∞`01010000`
    * Â∞Ü‰∏§‰∏™ÁªìÊûúÊåâ‰ΩçÊàñÔºåÂæóÂà∞`00000000 | 01010000 = 01010000`
- `11101101`Â∑¶Áßª‰∏â‰ΩçÂêéÂæóÂà∞`01101111`Ôºö
    * Â∞Ü`11101101`Âè≥Áßª`8 - 3 = 5`‰ΩçÔºåÂæóÂà∞`00000111`
    * Â∞Ü`11101101`Â∑¶Áßª`3`‰ΩçÔºåÂæóÂà∞`01101000`
    * Â∞Ü‰∏§‰∏™ÁªìÊûúÊåâ‰ΩçÊàñÔºåÂæóÂà∞`00000111 | 01101000 = 01101111`
- `01000000`Â∑¶Áßª‰∏â‰ΩçÂêéÂæóÂà∞`00000100`Ôºö
    * Â∞Ü`01000000`Âè≥Áßª`8 - 3 = 5`‰ΩçÔºåÂæóÂà∞`00000010`
    * Â∞Ü`01000000`Â∑¶Áßª`3`‰ΩçÔºåÂæóÂà∞`00000000`
    * Â∞Ü‰∏§‰∏™ÁªìÊûúÊåâ‰ΩçÊàñÔºåÂæóÂà∞`00000010 | 00000000 = 00000100`

Â∏åÊúõËøôËÉΩÂõûÁ≠îÊÇ®ÁöÑÈóÆÈ¢òÔºåÂ¶ÇÊûúÊÇ®ËøòÊúâÂÖ∂‰ªñÈóÆÈ¢òÔºåÊ¨¢ËøéÁªßÁª≠ÊèêÈóÆ„ÄÇüòä

¬π: Âæ™ÁéØÁßª‰ΩçÔºöÂæ™ÁéØÂ∑¶ÁßªÂíåÂæ™ÁéØÂè≥Áßª-CSDNÂçöÂÆ¢

Ê∫ê: ‰∏éÂøÖÂ∫îÁöÑÂØπËØùÔºå 2023/12/21
(1) Âæ™ÁéØÁßª‰ΩçÔºöÂæ™ÁéØÂ∑¶ÁßªÂíåÂæ™ÁéØÂè≥Áßª-CSDNÂçöÂÆ¢. https://blog.csdn.net/LiuBo_01/article/details/80149708.
(2) Âø´ÈÄüÊéåÊè°Â∑¶ÁßªÔºúÔºú„ÄÅÂè≥ÁßªÔºûÔºû‰ΩçËøêÁÆóÂèä‰ΩøÁî®ÊäÄÂ∑ß - Áü•‰πé. https://zhuanlan.zhihu.com/p/390085789.
(3) verilogÁßª‰ΩçÊìç‰ΩúÁ¨¶_ÁôæÂ∫¶ÊñáÂ∫ì. https://wenku.baidu.com/view/01915d7e51d380eb6294dd88d0d233d4b04e3f36.html.
*/
#include <config/wmkc.hpp>

#if WMKC_SUPPORT
#ifndef WMKC_CPP_FEA
#define WMKC_CPP_FEA
#include <wmkc_memory.hpp>
#include <wmkc_exception.hpp>

#define WMKC_FEA_NB 4
#define WMKC_FEA_NK 4
#define WMKC_FEA_NR 4

#define WMKC_FEA_BLOCKLEN 16

namespace wmkc {
    namespace crypto {
        enum class xcryptMode {ECB, CBC, CTR, CFB};
        class fea {
            private:
                wVoid subBytes(wByte *block);
                wVoid shiftBits(wByte *block);

                wVoid invSubBytes(wByte *block);
                wVoid invShiftBits(wByte *block);

                wVoid shiftRows(wByte *block);
                wVoid invShiftRows(wByte *block);

                wVoid xorWithIV(wByte *block, wByte *iv);
                wVoid keyExtension(wByte *key, wByte *iv);

                wVoid cipher(wByte *p, wByte *roundKey);
                wVoid invCipher(wByte *c, wByte *roundKey);

            public:
                wByte key[WMKC_FEA_BLOCKLEN << 1];
                wByte iv[WMKC_FEA_BLOCKLEN];
                wByte nonce[WMKC_FEA_BLOCKLEN >> 1];
                wByte roundKey[sizeof(key) * WMKC_FEA_NR]; // len(key) * WMKC_FEA_NR
                wU32 segmentSize;

                wVoid ecb_encrypt(wByte *p);
                wVoid ecb_decrypt(wByte *c);

                wVoid cbc_encrypt(wByte *p, wSize n);
                wVoid cbc_decrypt(wByte *c, wSize n);

                wVoid ctr_xcrypt(wByte *d, wSize n);

                wVoid cfb_encrypt(wByte *p, wSize n, wU32 segmentSize);
                wVoid cfb_decrypt(wByte *c, wSize n, wU32 segmentSize);

                //////////////////////////////////////////////////////////////////

                fea(const wByte *key, const wByte *iv, const wU32 segmentSize = 128);
                ~fea();
                void encrypt(wByte *content, wSize size, xcryptMode mode);
                void decrypt(wByte *content, wSize size, xcryptMode mode);
        };
    }
}

#endif
#endif
